
Building your first ASP.NET Core 2 MVC application with Visual Studio 2017
--------------------------------------------------------------------------

Snippets Module 6
-----------------

Feedback.cs
-----------

public class Feedback
{
	[BindNever]
	public int FeedbackId { get; set; }

	[Required]
	[StringLength(100, ErrorMessage = "Your name is required")]
	public string Name { get; set; }

	[Required]
	[StringLength(100, ErrorMessage = "Your email is required")]
	[DataType(DataType.EmailAddress)]
	[RegularExpression(@"(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|""(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*"")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])",
		ErrorMessage = "The email address is not entered in a correct format")]
	public string Email { get; set; }

	[Required]
	[StringLength(5000, ErrorMessage = "Your message is required")]
	public string Message { get; set; }

	public bool ContactMe { get; set; }

}

FeedbackRepository.cs
---------------------

public class FeedbackRepository: IFeedbackRepository
{
	private readonly AppDbContext _appDbContext;

	public FeedbackRepository(AppDbContext appDbContext)
	{
		_appDbContext = appDbContext;
	}

	public void AddFeedback(Feedback feedback)
	{
		_appDbContext.Feedbacks.Add(feedback);
		_appDbContext.SaveChanges();
	}
}


FeedbackController.cs
---------------------

public class FeedbackController : Controller
{
	private readonly IFeedbackRepository _feedbackRepository;

	public FeedbackController(IFeedbackRepository feedbackRepository)
	{
		_feedbackRepository = feedbackRepository;
	}

	// GET: /<controller>/
	public IActionResult Index()
	{
		return View();
	}

	[HttpPost]
	public IActionResult Index(Feedback feedback)
	{
		if (ModelState.IsValid)
		{
			_feedbackRepository.AddFeedback(feedback);
			return RedirectToAction("FeedbackComplete");
		}
		return View(feedback);
	}

	public IActionResult FeedbackComplete()
	{
		return View();
	}
}


Views/Feedback/Index.cshtml
---------------------------


@model Feedback


<form asp-action="Index" method="post" class="form-horizontal" role="form">

    <div asp-validation-summary="All" class="text-danger"></div>

    <div class="form-group">
        <label asp-for="Name" class="col-md-2 control-label"></label>
        <div class="col-md-5">
            <input asp-for="Name" class="form-control" />
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>
    </div>

    <div class="form-group">
        <label asp-for="Email" class="col-md-2 control-label"></label>
        <div class="col-md-5">
            <input asp-for="Email" class="form-control" />
            <span asp-validation-for="Email" class="text-danger"></span>
        </div>
    </div>

    <div class="form-group">
        <label asp-for="Message" class="col-md-2 control-label"></label>
        <div class="col-md-5">
            <textarea asp-for="Message" class="form-control"></textarea>
            <span asp-validation-for="Message" class="text-danger"></span>
        </div>
    </div>

    <div class="form-group">
        <label asp-for="ContactMe" class="col-md-2 control-label"></label>
        <div class="col-md-5">
            <input type="checkbox" asp-for="ContactMe" class="form-control" />
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-5">
            <input type="submit" class="btn btn-primary" value="Send feedback" />
        </div>
    </div>

</form>